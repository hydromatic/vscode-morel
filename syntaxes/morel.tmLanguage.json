// Licensed to Julian Hyde under one or more contributor license
// agreements.  See the NOTICE file distributed with this work
// for additional information regarding copyright ownership.
// Julian Hyde licenses this file to you under the Apache
// License, Version 2.0 (the "License"); you may not use this
// file except in compliance with the License.  You may obtain a
// copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
// either express or implied.  See the License for the specific
// language governing permissions and limitations under the
// License.
//
{
  "scopeName": "source.morel",
  "fileTypes": ["morel"],
  "name": "Morel",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.morel",
          "match": "\\(\\*\\).*$"
        },
        {
          "name": "comment.block.morel",
          "begin": "\\(\\*",
          "end": "\\*\\)"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.expression.morel",
          "match": "\\b(let|in|end|fn|if|then|else|case|of|andalso|orelse|not)\\b"
        },
        {
          "name": "keyword.declaration.morel",
          "match": "\\b(val|fun|and|datatype)\\b"
        },
        {
          "name": "keyword.query.morel",
          "match": "\\b(compute|desc|exists|forall|from|group|into|join|on|order|require|skip|take|through|where|yield)\\b"
        },
        {
          "name": "keyword.operator.morel",
          "match": "\\b(not|elem|notelem)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.morel",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.morel",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.morel",
          "match": "\\b[~]?\\d+(\\.\\d+)?([eE][~]?\\d+)\\b"
        }
      ]
    }
  }
}

// End morel.tmLanguage.json
